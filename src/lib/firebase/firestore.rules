rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check authentication
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    // Helper function to check user ownership
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Users can read and write their own preferences
    match /userPreferences/{userId} {
      allow read, write: if isOwner(userId);
    }

    // User stats - authenticated users can read/write their own stats
    match /userStats/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Users can read and write their own vacation data
    match /parkVisits/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /reservations/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /attractionVisits/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /userAchievements/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /userEvents/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /vacationPartyMembers/{document} {
      allow read, write: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }

    match /expenses/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /fitnessData/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /photos/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /friendships/{document} {
      allow read, write: if isAuthenticated() && (resource.data.userId == request.auth.uid || resource.data.friendId == request.auth.uid);
    }

    match /magicMoments/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Vacation-specific collections with party member access
    match /vacations/{vacationId} {
      // Allow access to party members of the vacation
      function isPartyMember() {
        return isAuthenticated() &&
               exists(/databases/$(database)/documents/vacationPartyMembers/$(request.auth.uid + '_' + vacationId));
      }

      // Messages within a vacation
      match /messages/{messageId} {
        allow read, write: if isPartyMember();
      }

      // Typing indicators
      match /typing/{typingId} {
        allow read, write: if isPartyMember();
      }

      // Location updates
      match /locationUpdates/{updateId} {
        allow read, write: if isPartyMember();
      }

      // Meetup requests
      match /meetupRequests/{requestId} {
        allow read, write: if isPartyMember();
      }
    }

    // Authenticated read access for attractions reference data
    match /attractions/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Authenticated read access for resort data
    match /resorts/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Authenticated read access for resort categories
    match /resortCategories/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Authenticated read access for resort statistics
    match /resortStats/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Disney Springs collections - authenticated read access
    match /disney_springs_metadata/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_locations/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_districts/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_categories/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_events/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_operational/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_services/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /disney_springs_tips/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Restaurant data rules - AUTHENTICATED READ, AUTHENTICATED WRITE
    match /restaurants/{restaurantId} {
      // Authenticated users can read restaurant data
      allow read: if isAuthenticated();

      // Authenticated users can write restaurant data (for now)
      // TODO: Restrict to admin users only in production
      allow write: if isAuthenticated();
    }

    // Restaurant stats and metadata
    match /restaurant-stats/{statsId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // User-specific restaurant data (favorites, personal ratings, etc.)
    match /user-restaurant-data/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Restaurant reviews - users can create and edit their own
    match /restaurant-reviews/{reviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() &&
        (request.auth.uid == resource.data.userId);
    }

    // Dining reservations - user-specific
    match /dining-reservations/{reservationId} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == resource.data.userId);
    }

    // Authenticated read access for dining plans and general dining info
    match /dining-plans/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    match /cuisine-types/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes from server
    }

    // Additional collections that may be accessed
    match /itineraries/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    match /vacations/{document} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}